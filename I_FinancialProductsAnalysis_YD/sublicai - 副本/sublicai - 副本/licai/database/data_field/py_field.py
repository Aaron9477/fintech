# -*- coding=utf-8 -*-
# --------------------------------
# @Time      : 2023/7/10 16:29 
# @Author    : Wangyd5 
# @File      : py_field
# @Project   : licai
# @Function  ：普益数据表
# --------------------------------

from sqlalchemy import Column, Index
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.types import VARCHAR, Numeric,Integer

Base = declarative_base()


class ProductBaseInfo(Base):
    __tablename__ = "product_base_info"
    cp_id = Column(Numeric(11), comment='产品id', primary_key=True)
    product_code = Column(VARCHAR(30), comment='产品登记码')
    bank_product_code = Column(VARCHAR(30), comment='银行产品编码')
    full_name = Column(VARCHAR(80), comment='产品全称')
    short_name = Column(VARCHAR(80), comment='产品简称')
    product_series = Column(VARCHAR(80), comment='产品系列')
    issue_company_name = Column(VARCHAR(50), comment='发行机构名称')
    issue_company_type = Column(Integer, comment='发行机构类型')
    profit_type = Column(Integer, comment='产品收益类型')
    old_invest_scope = Column(VARCHAR(100), comment='资金投向')
    sale_start_date = Column(VARCHAR(30), comment='募集开始日')
    sale_end_date = Column(VARCHAR(30), comment='募集截止日')
    invest_start_date = Column(VARCHAR(30), comment='产品成立日')
    invest_end_date = Column(VARCHAR(30), comment='产品到期日')
    actual_end_date = Column(VARCHAR(30), comment='实际到期日')
    end_status = Column(Integer, comment='产品终止状态')
    invest_term = Column(VARCHAR(20), comment='产品期限')
    payment_term = Column(Numeric(11), comment='投资周期')
    sale_channel = Column(VARCHAR(1000), comment='销售渠道')
    product_type = Column(Integer, comment='产品类型')
    raise_way = Column(Integer, comment='募集方式')
    is_cash_manage = Column(Integer, comment='是否现金管理型')
    product_object = Column(Integer, comment='产品对象')
    customer_type = Column(Integer, comment='客户类型')
    person_invest_start = Column(Numeric(20, 2), comment='个人投资起点')
    organ_invest_start = Column(Numeric(20, 2), comment='机构投资起点')
    person_invest_additional = Column(Numeric(20, 2), comment='个人投资递增金额')
    organ_invest_additional = Column(Numeric(20, 2), comment='机构投资递增金额')
    top_raise_scale = Column(Numeric(20, 2), comment='计划募集规模')
    actual_raise_scale = Column(Numeric(20, 2), comment='实际募集规模')
    risk_level = Column(Integer, comment='风险等级')
    expected_high_yield = Column(Numeric(8, 4), comment='公布最高收益率')
    expected_low_yield = Column(Numeric(8, 4), comment='公布最低收益率')
    is_benchmark = Column(Integer, comment='是否设立业绩比较基准')
    benchmark_type = Column(Integer, comment='业绩比较基准类型')
    benchmark = Column(VARCHAR(200), comment='业绩比较基准')
    benchmark_high = Column(Numeric(8, 4), comment='最高业绩比较基准')
    benchmark_low = Column(Numeric(8, 4), comment='最低业绩比较基准')
    benchmark_avg = Column(Numeric(8, 4), comment='平均业绩比较基准')
    actual_yield = Column(Numeric(8, 4), comment='到期收益率')
    invest_currency = Column(VARCHAR(3), comment='投资币种')
    cash_currency = Column(VARCHAR(3), comment='收益兑付币')
    interest_basis = Column(Integer, comment='计息基准')
    is_qdii = Column(Integer, comment='是否qdii')
    is_index = Column(Integer, comment='是否指数型')
    is_fof = Column(Integer, comment='是否fof')
    classify_type = Column(Integer, comment='分级份额类型')
    is_deal = Column(Integer, comment='是否可交易')
    sub_cp_id = Column(VARCHAR(500), comment='各份额id')
    is_make_over = Column(Integer, comment='是否可转让')
    is_pledge = Column(Integer, comment='是否可质押')
    is_structure = Column(Integer, comment='是否结构型')
    hook_type = Column(VARCHAR(100), comment='挂钩对象类型')
    hook_name = Column(VARCHAR(100), comment='挂钩对象名称')
    open_type = Column(Integer, comment='开放式类型')
    is_grading = Column(Integer, comment='是否分档')
    is_early_redeem = Column(Integer, comment='是否可以提前赎回')
    is_net_value = Column(Integer, comment='是否净值型')
    close_start_date = Column(VARCHAR(30), comment='投资封闭开始日')
    close_end_date = Column(VARCHAR(30), comment='投资封闭结束日')
    close_term = Column(Numeric(11), comment='投资封闭期期限')
    sale_area = Column(VARCHAR(1000), comment='销售区域')
    city_ch = Column(VARCHAR(1000), comment='城市')
    province_ch = Column(VARCHAR(500), comment='省份')
    area_ch = Column(VARCHAR(500), comment='片区')
    parent_bank = Column(VARCHAR(50), comment='对应母行名称')
    product_transfer = Column(Integer, comment='产品迁移情况')
    transfer_date = Column(VARCHAR(30), comment='迁移日期')
    transfer_id = Column(VARCHAR(100), comment='对应迁移产品id')
    trustee_bank = Column(VARCHAR(50), comment='托管行')
    fixed_income_upper = Column(Numeric(11), comment='固收上限')
    fixed_income_lower = Column(Numeric(11), comment='固收下限')
    equity_lower = Column(Numeric(11), comment='权益下限')
    equity_upper = Column(Numeric(11), comment='权益上限')
    derivatives_upper = Column(Numeric(11), comment='商品及衍生品上限')
    derivatives_lower = Column(Numeric(11), comment='商品及衍生品下限')
    invest_strategy = Column(VARCHAR(2000), comment='投资策略')
    dividend_rules = Column(VARCHAR(2000), comment='分红规则(描述)')
    open_rules = Column(VARCHAR(2000), comment='开放规则(描述)')
    product_features = Column(VARCHAR(2000), comment='产品特色(描述)')
    investment_counselor = Column(VARCHAR(80), comment='投资顾问')
    is_feature = Column(Integer, comment='是否特色产品')
    min_hold_term = Column(Numeric(11), comment='最少持有期限')
    subscribe_frequency = Column(VARCHAR(50), comment='申购频率')
    redeem_frequency = Column(VARCHAR(50), comment='赎回频率')
    purchase_confirmation_date = Column(Numeric(11), comment='申购确认日')
    redeem_confirmation_date = Column(Numeric(11), comment='赎回确认日')
    capital_arrival_time = Column(Numeric(11), comment='赎回后资金到账时间')
    large_redeem_ratio = Column(Numeric(8, 4), comment='当日大额赎回比例限制')
    large_redeem_amount = Column(Integer, comment='当日大额赎回绝对金额限制')
    large_redeem_share = Column(Integer, comment='当日大额赎回绝对份额限制')
    is_partial_redeem = Column(Integer, comment='是否允许部分赎回')
    person_redeem_upper = Column(Integer, comment='个人当日赎回金额上限')
    person_redeem_lower = Column(Integer, comment='个人当日赎回金额下限')
    subscribe_rule = Column(VARCHAR(500), comment='申购开放规则')
    redeem_rule = Column(VARCHAR(500), comment='赎回开放规则')
    redeem_share = Column(Numeric(16, 2), comment='赎回起点份额')
    min_hold_share = Column(Numeric(16, 2), comment='最低持有份额')
    create_time = Column(VARCHAR(30), comment='创建时间')
    update_time = Column(VARCHAR(30), comment='更新时间')
    __table_args__ = (Index('product_code', "cp_id"),)



class ProductNetValue(Base):
    __tablename__ = "product_net_value"
    cp_id = Column(Numeric(11), comment='产品id', primary_key=True)
    trade_date = Column(VARCHAR(30), comment='日期')
    net_value = Column(Numeric(12, 8), comment='单位净值')
    accumulated_net_value = Column(Numeric(12, 8), comment='累计净值')
    actual_net_value = Column(Numeric(12, 8), comment='实际兑付净值')
    net_value_allocation_type = Column(Integer, comment='净值分配类型')
    yield_today = Column(Numeric(10,4), comment='当日年化收益率')
    yield_7_days_annual = Column(Numeric(10,4), comment='7日年化收益率')
    earning_per_ten_thousand = Column(Numeric(12, 8), comment='万份收益')
    create_time = Column(VARCHAR(30), comment='创建时间')
    update_time = Column(VARCHAR(30), comment='更新时间')
    __table_args__ = (Index("cp_id",'trade_date'),)
